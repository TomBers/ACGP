<div class="columns">
	<div class="column is-two-thirds">
		<div id="canvas-container">
			<canvas id="myCanvas" phx-hook="SendCells" width="500" height="500"></canvas>
			<button class="button is-large" id="stepForward">Step forward</button>
		</div>
	</div>
	<div class="column is-one-quarter">
	    <ol type="1">
    <%= for user <- @users do %>
        <li><%= if @my_name == user.name do %>Me<% else %><%= user.name %><% end %> | <span><progress class="progress is-primary" max="100", value="<%= get_coverage(@game_state, user) %>"></progress></span></li>
    <% end %>
    </ol>
	</div>

</div>


<script type="text/paperscript" canvas="myCanvas">
var paths = [];
var cells = Abundance.cells;
var board = document.getElementById('myCanvas');

drawPaths(Abundance.calcBoard(cells));


document.getElementById("stepForward").addEventListener("click", () => {
	// Step the game forward
	cells = Abundance.stepForward(cells);
	Abundance.sendGridEvent(board, cells);
	drawPaths(Abundance.calcBoard(cells));
});



function onMouseDown(event) {
	segment = path = null;
	var hitResult = project.hitTest(event.point, {
		segments: true,
		stroke: true,
		fill: true,
		tolerance: 5
	});
	cells = Abundance.updateBoard(cells, hitResult.item.index);
	Abundance.sendGridEvent(board, cells);
	drawPaths(Abundance.calcBoard(cells));
}

// Draw func needs to be in the paperscript block
function drawPaths(paths) {
	project.clear()
	paths.map((path) => {
		var rectangle = new Rectangle(new Point(path.x, path.y), new Size(path.size, path.size));
		var cell = new Path.Rectangle(rectangle);
		cell.fillColor = path.col;
		cell.selected = false;

		if(false) {
			var pointTextLocation = new paper.Point(path.x, path.y + 10);
			var myText = new paper.PointText(pointTextLocation);
			myText.fillColor = 'black';
			myText.content = path.indx;
		}

	})
}

</script>
